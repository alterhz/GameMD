// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gmsg.proto

#ifndef PROTOBUF_gmsg_2eproto__INCLUDED
#define PROTOBUF_gmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gproto {
namespace gather {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gmsg_2eproto();
void protobuf_AssignDesc_gmsg_2eproto();
void protobuf_ShutdownFile_gmsg_2eproto();

class MSG_C2G_HeartBeat;
class MSG_G2C_HeartBeat;
class MSG_O2G_Deposit;
class MSG_O2G_AccountReg;
class MSG_O2G_RoleCreate;
class MSG_O2G_Login;
class MSG_O2G_BagExtend;
class MSG_O2G_BuyInstance;
class MSG_O2G_BuyCoin;
class MSG_O2G_Diamond;
class MSG_O2G_Coin;
class INFO_ItemMes;
class INFO_Property;
class INFO_HoleGem;
class INFO_Equipment;
class MSG_O2G_Item;
class MSG_O2G_Equip;
class MSG_O2G_Relive;
class MSG_O2G_Instance;
class MSG_O2G_Arena;

// ===================================================================

class MSG_C2G_HeartBeat : public ::google::protobuf::Message {
 public:
  MSG_C2G_HeartBeat();
  virtual ~MSG_C2G_HeartBeat();

  MSG_C2G_HeartBeat(const MSG_C2G_HeartBeat& from);

  inline MSG_C2G_HeartBeat& operator=(const MSG_C2G_HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2G_HeartBeat& default_instance();

  void Swap(MSG_C2G_HeartBeat* other);

  // implements Message ----------------------------------------------

  MSG_C2G_HeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_C2G_HeartBeat& from);
  void MergeFrom(const MSG_C2G_HeartBeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_C2G_HeartBeat)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_C2G_HeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class MSG_G2C_HeartBeat : public ::google::protobuf::Message {
 public:
  MSG_G2C_HeartBeat();
  virtual ~MSG_G2C_HeartBeat();

  MSG_G2C_HeartBeat(const MSG_G2C_HeartBeat& from);

  inline MSG_G2C_HeartBeat& operator=(const MSG_G2C_HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_G2C_HeartBeat& default_instance();

  void Swap(MSG_G2C_HeartBeat* other);

  // implements Message ----------------------------------------------

  MSG_G2C_HeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_G2C_HeartBeat& from);
  void MergeFrom(const MSG_G2C_HeartBeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_G2C_HeartBeat)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_G2C_HeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Deposit : public ::google::protobuf::Message {
 public:
  MSG_O2G_Deposit();
  virtual ~MSG_O2G_Deposit();

  MSG_O2G_Deposit(const MSG_O2G_Deposit& from);

  inline MSG_O2G_Deposit& operator=(const MSG_O2G_Deposit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Deposit& default_instance();

  void Swap(MSG_O2G_Deposit* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Deposit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Deposit& from);
  void MergeFrom(const MSG_O2G_Deposit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 10;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 10;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // required string account = 20;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 20;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int32 roleid = 30;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 30;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 40;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 40;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolesn = 50;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 50;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required int32 rolelevel = 60;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 60;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 viplevel = 70;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 70;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // required int32 type = 80;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 80;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 diamond = 90;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 90;
  inline ::google::protobuf::int32 diamond() const;
  inline void set_diamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Deposit)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_diamond();
  inline void clear_has_diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* platform_;
  ::std::string* account_;
  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolesn_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 diamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Deposit* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_AccountReg : public ::google::protobuf::Message {
 public:
  MSG_O2G_AccountReg();
  virtual ~MSG_O2G_AccountReg();

  MSG_O2G_AccountReg(const MSG_O2G_AccountReg& from);

  inline MSG_O2G_AccountReg& operator=(const MSG_O2G_AccountReg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_AccountReg& default_instance();

  void Swap(MSG_O2G_AccountReg* other);

  // implements Message ----------------------------------------------

  MSG_O2G_AccountReg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_AccountReg& from);
  void MergeFrom(const MSG_O2G_AccountReg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 10;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 10;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // required string account = 20;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 20;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_AccountReg)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* platform_;
  ::std::string* account_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_AccountReg* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_RoleCreate : public ::google::protobuf::Message {
 public:
  MSG_O2G_RoleCreate();
  virtual ~MSG_O2G_RoleCreate();

  MSG_O2G_RoleCreate(const MSG_O2G_RoleCreate& from);

  inline MSG_O2G_RoleCreate& operator=(const MSG_O2G_RoleCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_RoleCreate& default_instance();

  void Swap(MSG_O2G_RoleCreate* other);

  // implements Message ----------------------------------------------

  MSG_O2G_RoleCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_RoleCreate& from);
  void MergeFrom(const MSG_O2G_RoleCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 10;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 10;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // required string account = 20;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 20;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int32 rolesn = 30;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 30;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required string rolename = 40;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 40;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_RoleCreate)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* platform_;
  ::std::string* account_;
  ::std::string* rolename_;
  ::google::protobuf::int32 rolesn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_RoleCreate* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Login : public ::google::protobuf::Message {
 public:
  MSG_O2G_Login();
  virtual ~MSG_O2G_Login();

  MSG_O2G_Login(const MSG_O2G_Login& from);

  inline MSG_O2G_Login& operator=(const MSG_O2G_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Login& default_instance();

  void Swap(MSG_O2G_Login* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Login& from);
  void MergeFrom(const MSG_O2G_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 10;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 10;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // required string account = 20;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 20;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int32 rolesn = 30;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 30;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required int32 rolelevel = 35;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 35;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required string rolename = 40;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 40;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 onlinetime = 50;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 50;
  inline ::google::protobuf::int32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::int32 value);

  // required int32 offlinetime = 60;
  inline bool has_offlinetime() const;
  inline void clear_offlinetime();
  static const int kOfflinetimeFieldNumber = 60;
  inline ::google::protobuf::int32 offlinetime() const;
  inline void set_offlinetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Login)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_offlinetime();
  inline void clear_has_offlinetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* platform_;
  ::std::string* account_;
  ::google::protobuf::int32 rolesn_;
  ::google::protobuf::int32 rolelevel_;
  ::std::string* rolename_;
  ::google::protobuf::int32 onlinetime_;
  ::google::protobuf::int32 offlinetime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Login* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_BagExtend : public ::google::protobuf::Message {
 public:
  MSG_O2G_BagExtend();
  virtual ~MSG_O2G_BagExtend();

  MSG_O2G_BagExtend(const MSG_O2G_BagExtend& from);

  inline MSG_O2G_BagExtend& operator=(const MSG_O2G_BagExtend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_BagExtend& default_instance();

  void Swap(MSG_O2G_BagExtend* other);

  // implements Message ----------------------------------------------

  MSG_O2G_BagExtend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_BagExtend& from);
  void MergeFrom(const MSG_O2G_BagExtend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolesn = 30;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 30;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required int32 type = 40;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 40;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 extendnum = 50;
  inline bool has_extendnum() const;
  inline void clear_extendnum();
  static const int kExtendnumFieldNumber = 50;
  inline ::google::protobuf::int32 extendnum() const;
  inline void set_extendnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_BagExtend)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_extendnum();
  inline void clear_has_extendnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolesn_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 extendnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_BagExtend* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_BuyInstance : public ::google::protobuf::Message {
 public:
  MSG_O2G_BuyInstance();
  virtual ~MSG_O2G_BuyInstance();

  MSG_O2G_BuyInstance(const MSG_O2G_BuyInstance& from);

  inline MSG_O2G_BuyInstance& operator=(const MSG_O2G_BuyInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_BuyInstance& default_instance();

  void Swap(MSG_O2G_BuyInstance* other);

  // implements Message ----------------------------------------------

  MSG_O2G_BuyInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_BuyInstance& from);
  void MergeFrom(const MSG_O2G_BuyInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolesn = 30;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 30;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required int32 rolelevel = 40;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 40;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 viplevel = 50;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 50;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // required int32 instancesn = 60;
  inline bool has_instancesn() const;
  inline void clear_instancesn();
  static const int kInstancesnFieldNumber = 60;
  inline ::google::protobuf::int32 instancesn() const;
  inline void set_instancesn(::google::protobuf::int32 value);

  // required int32 buycount = 70;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuycountFieldNumber = 70;
  inline ::google::protobuf::int32 buycount() const;
  inline void set_buycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_BuyInstance)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_instancesn();
  inline void clear_has_instancesn();
  inline void set_has_buycount();
  inline void clear_has_buycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolesn_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 instancesn_;
  ::google::protobuf::int32 buycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_BuyInstance* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_BuyCoin : public ::google::protobuf::Message {
 public:
  MSG_O2G_BuyCoin();
  virtual ~MSG_O2G_BuyCoin();

  MSG_O2G_BuyCoin(const MSG_O2G_BuyCoin& from);

  inline MSG_O2G_BuyCoin& operator=(const MSG_O2G_BuyCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_BuyCoin& default_instance();

  void Swap(MSG_O2G_BuyCoin* other);

  // implements Message ----------------------------------------------

  MSG_O2G_BuyCoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_BuyCoin& from);
  void MergeFrom(const MSG_O2G_BuyCoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolesn = 30;
  inline bool has_rolesn() const;
  inline void clear_rolesn();
  static const int kRolesnFieldNumber = 30;
  inline ::google::protobuf::int32 rolesn() const;
  inline void set_rolesn(::google::protobuf::int32 value);

  // required int32 rolelevel = 40;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 40;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 viplevel = 50;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 50;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // required int32 spenddiamond = 60;
  inline bool has_spenddiamond() const;
  inline void clear_spenddiamond();
  static const int kSpenddiamondFieldNumber = 60;
  inline ::google::protobuf::int32 spenddiamond() const;
  inline void set_spenddiamond(::google::protobuf::int32 value);

  // required int32 coin = 70;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 70;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_BuyCoin)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolesn();
  inline void clear_has_rolesn();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_spenddiamond();
  inline void clear_has_spenddiamond();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolesn_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 spenddiamond_;
  ::google::protobuf::int32 coin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_BuyCoin* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Diamond : public ::google::protobuf::Message {
 public:
  MSG_O2G_Diamond();
  virtual ~MSG_O2G_Diamond();

  MSG_O2G_Diamond(const MSG_O2G_Diamond& from);

  inline MSG_O2G_Diamond& operator=(const MSG_O2G_Diamond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Diamond& default_instance();

  void Swap(MSG_O2G_Diamond* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Diamond* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Diamond& from);
  void MergeFrom(const MSG_O2G_Diamond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 10;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 10;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int32 roleid = 20;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 20;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 30;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 30;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolelevel = 40;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 40;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 type = 50;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 50;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 subtype = 60;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubtypeFieldNumber = 60;
  inline ::google::protobuf::int32 subtype() const;
  inline void set_subtype(::google::protobuf::int32 value);

  // required int32 changediamond = 70;
  inline bool has_changediamond() const;
  inline void clear_changediamond();
  static const int kChangediamondFieldNumber = 70;
  inline ::google::protobuf::int32 changediamond() const;
  inline void set_changediamond(::google::protobuf::int32 value);

  // required int32 totaldiamond = 80;
  inline bool has_totaldiamond() const;
  inline void clear_totaldiamond();
  static const int kTotaldiamondFieldNumber = 80;
  inline ::google::protobuf::int32 totaldiamond() const;
  inline void set_totaldiamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Diamond)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_subtype();
  inline void clear_has_subtype();
  inline void set_has_changediamond();
  inline void clear_has_changediamond();
  inline void set_has_totaldiamond();
  inline void clear_has_totaldiamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 subtype_;
  ::google::protobuf::int32 changediamond_;
  ::google::protobuf::int32 totaldiamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Diamond* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Coin : public ::google::protobuf::Message {
 public:
  MSG_O2G_Coin();
  virtual ~MSG_O2G_Coin();

  MSG_O2G_Coin(const MSG_O2G_Coin& from);

  inline MSG_O2G_Coin& operator=(const MSG_O2G_Coin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Coin& default_instance();

  void Swap(MSG_O2G_Coin* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Coin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Coin& from);
  void MergeFrom(const MSG_O2G_Coin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolelevel = 30;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 30;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 type = 40;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 40;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 subtype = 50;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubtypeFieldNumber = 50;
  inline ::google::protobuf::int32 subtype() const;
  inline void set_subtype(::google::protobuf::int32 value);

  // required int32 changecoin = 60;
  inline bool has_changecoin() const;
  inline void clear_changecoin();
  static const int kChangecoinFieldNumber = 60;
  inline ::google::protobuf::int32 changecoin() const;
  inline void set_changecoin(::google::protobuf::int32 value);

  // required int32 totalcoin = 70;
  inline bool has_totalcoin() const;
  inline void clear_totalcoin();
  static const int kTotalcoinFieldNumber = 70;
  inline ::google::protobuf::int32 totalcoin() const;
  inline void set_totalcoin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Coin)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_subtype();
  inline void clear_has_subtype();
  inline void set_has_changecoin();
  inline void clear_has_changecoin();
  inline void set_has_totalcoin();
  inline void clear_has_totalcoin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 subtype_;
  ::google::protobuf::int32 changecoin_;
  ::google::protobuf::int32 totalcoin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Coin* default_instance_;
};
// -------------------------------------------------------------------

class INFO_ItemMes : public ::google::protobuf::Message {
 public:
  INFO_ItemMes();
  virtual ~INFO_ItemMes();

  INFO_ItemMes(const INFO_ItemMes& from);

  inline INFO_ItemMes& operator=(const INFO_ItemMes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INFO_ItemMes& default_instance();

  void Swap(INFO_ItemMes* other);

  // implements Message ----------------------------------------------

  INFO_ItemMes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INFO_ItemMes& from);
  void MergeFrom(const INFO_ItemMes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 itemsn = 3;
  inline bool has_itemsn() const;
  inline void clear_itemsn();
  static const int kItemsnFieldNumber = 3;
  inline ::google::protobuf::int32 itemsn() const;
  inline void set_itemsn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.INFO_ItemMes)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_itemsn();
  inline void clear_has_itemsn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 itemsn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static INFO_ItemMes* default_instance_;
};
// -------------------------------------------------------------------

class INFO_Property : public ::google::protobuf::Message {
 public:
  INFO_Property();
  virtual ~INFO_Property();

  INFO_Property(const INFO_Property& from);

  inline INFO_Property& operator=(const INFO_Property& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INFO_Property& default_instance();

  void Swap(INFO_Property* other);

  // implements Message ----------------------------------------------

  INFO_Property* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INFO_Property& from);
  void MergeFrom(const INFO_Property& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 propertytype = 1;
  inline bool has_propertytype() const;
  inline void clear_propertytype();
  static const int kPropertytypeFieldNumber = 1;
  inline ::google::protobuf::int32 propertytype() const;
  inline void set_propertytype(::google::protobuf::int32 value);

  // required int32 propertyval = 2;
  inline bool has_propertyval() const;
  inline void clear_propertyval();
  static const int kPropertyvalFieldNumber = 2;
  inline ::google::protobuf::int32 propertyval() const;
  inline void set_propertyval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.INFO_Property)
 private:
  inline void set_has_propertytype();
  inline void clear_has_propertytype();
  inline void set_has_propertyval();
  inline void clear_has_propertyval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 propertytype_;
  ::google::protobuf::int32 propertyval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static INFO_Property* default_instance_;
};
// -------------------------------------------------------------------

class INFO_HoleGem : public ::google::protobuf::Message {
 public:
  INFO_HoleGem();
  virtual ~INFO_HoleGem();

  INFO_HoleGem(const INFO_HoleGem& from);

  inline INFO_HoleGem& operator=(const INFO_HoleGem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INFO_HoleGem& default_instance();

  void Swap(INFO_HoleGem* other);

  // implements Message ----------------------------------------------

  INFO_HoleGem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INFO_HoleGem& from);
  void MergeFrom(const INFO_HoleGem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 holeid = 1;
  inline bool has_holeid() const;
  inline void clear_holeid();
  static const int kHoleidFieldNumber = 1;
  inline ::google::protobuf::int32 holeid() const;
  inline void set_holeid(::google::protobuf::int32 value);

  // required int32 gemsn = 2;
  inline bool has_gemsn() const;
  inline void clear_gemsn();
  static const int kGemsnFieldNumber = 2;
  inline ::google::protobuf::int32 gemsn() const;
  inline void set_gemsn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.INFO_HoleGem)
 private:
  inline void set_has_holeid();
  inline void clear_has_holeid();
  inline void set_has_gemsn();
  inline void clear_has_gemsn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 holeid_;
  ::google::protobuf::int32 gemsn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static INFO_HoleGem* default_instance_;
};
// -------------------------------------------------------------------

class INFO_Equipment : public ::google::protobuf::Message {
 public:
  INFO_Equipment();
  virtual ~INFO_Equipment();

  INFO_Equipment(const INFO_Equipment& from);

  inline INFO_Equipment& operator=(const INFO_Equipment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INFO_Equipment& default_instance();

  void Swap(INFO_Equipment* other);

  // implements Message ----------------------------------------------

  INFO_Equipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INFO_Equipment& from);
  void MergeFrom(const INFO_Equipment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .gproto.gather.INFO_ItemMes basemes = 1;
  inline bool has_basemes() const;
  inline void clear_basemes();
  static const int kBasemesFieldNumber = 1;
  inline const ::gproto::gather::INFO_ItemMes& basemes() const;
  inline ::gproto::gather::INFO_ItemMes* mutable_basemes();
  inline ::gproto::gather::INFO_ItemMes* release_basemes();
  inline void set_allocated_basemes(::gproto::gather::INFO_ItemMes* basemes);

  // required int32 strelevel = 2;
  inline bool has_strelevel() const;
  inline void clear_strelevel();
  static const int kStrelevelFieldNumber = 2;
  inline ::google::protobuf::int32 strelevel() const;
  inline void set_strelevel(::google::protobuf::int32 value);

  // repeated int32 basepropty = 3;
  inline int basepropty_size() const;
  inline void clear_basepropty();
  static const int kBaseproptyFieldNumber = 3;
  inline ::google::protobuf::int32 basepropty(int index) const;
  inline void set_basepropty(int index, ::google::protobuf::int32 value);
  inline void add_basepropty(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      basepropty() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_basepropty();

  // repeated .gproto.gather.INFO_Property addtional = 4;
  inline int addtional_size() const;
  inline void clear_addtional();
  static const int kAddtionalFieldNumber = 4;
  inline const ::gproto::gather::INFO_Property& addtional(int index) const;
  inline ::gproto::gather::INFO_Property* mutable_addtional(int index);
  inline ::gproto::gather::INFO_Property* add_addtional();
  inline const ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_Property >&
      addtional() const;
  inline ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_Property >*
      mutable_addtional();

  // repeated .gproto.gather.INFO_HoleGem holegem = 5;
  inline int holegem_size() const;
  inline void clear_holegem();
  static const int kHolegemFieldNumber = 5;
  inline const ::gproto::gather::INFO_HoleGem& holegem(int index) const;
  inline ::gproto::gather::INFO_HoleGem* mutable_holegem(int index);
  inline ::gproto::gather::INFO_HoleGem* add_holegem();
  inline const ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_HoleGem >&
      holegem() const;
  inline ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_HoleGem >*
      mutable_holegem();

  // required int32 curholenum = 6;
  inline bool has_curholenum() const;
  inline void clear_curholenum();
  static const int kCurholenumFieldNumber = 6;
  inline ::google::protobuf::int32 curholenum() const;
  inline void set_curholenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.INFO_Equipment)
 private:
  inline void set_has_basemes();
  inline void clear_has_basemes();
  inline void set_has_strelevel();
  inline void clear_has_strelevel();
  inline void set_has_curholenum();
  inline void clear_has_curholenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::gproto::gather::INFO_ItemMes* basemes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > basepropty_;
  ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_Property > addtional_;
  ::google::protobuf::int32 strelevel_;
  ::google::protobuf::int32 curholenum_;
  ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_HoleGem > holegem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static INFO_Equipment* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Item : public ::google::protobuf::Message {
 public:
  MSG_O2G_Item();
  virtual ~MSG_O2G_Item();

  MSG_O2G_Item(const MSG_O2G_Item& from);

  inline MSG_O2G_Item& operator=(const MSG_O2G_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Item& default_instance();

  void Swap(MSG_O2G_Item* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Item& from);
  void MergeFrom(const MSG_O2G_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 itemsn = 10;
  inline bool has_itemsn() const;
  inline void clear_itemsn();
  static const int kItemsnFieldNumber = 10;
  inline ::google::protobuf::int32 itemsn() const;
  inline void set_itemsn(::google::protobuf::int32 value);

  // required int32 itemtype = 20;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 20;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // required int32 num = 30;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 30;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 type = 40;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 40;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 way = 50;
  inline bool has_way() const;
  inline void clear_way();
  static const int kWayFieldNumber = 50;
  inline ::google::protobuf::int32 way() const;
  inline void set_way(::google::protobuf::int32 value);

  // required int32 roleid = 60;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 60;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 70;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 70;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolelevel = 80;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 80;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // optional .gproto.gather.INFO_Equipment equip = 90;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 90;
  inline const ::gproto::gather::INFO_Equipment& equip() const;
  inline ::gproto::gather::INFO_Equipment* mutable_equip();
  inline ::gproto::gather::INFO_Equipment* release_equip();
  inline void set_allocated_equip(::gproto::gather::INFO_Equipment* equip);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Item)
 private:
  inline void set_has_itemsn();
  inline void clear_has_itemsn();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_way();
  inline void clear_has_way();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_equip();
  inline void clear_has_equip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemsn_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 way_;
  ::google::protobuf::int32 roleid_;
  ::std::string* rolename_;
  ::gproto::gather::INFO_Equipment* equip_;
  ::google::protobuf::int32 rolelevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Item* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Equip : public ::google::protobuf::Message {
 public:
  MSG_O2G_Equip();
  virtual ~MSG_O2G_Equip();

  MSG_O2G_Equip(const MSG_O2G_Equip& from);

  inline MSG_O2G_Equip& operator=(const MSG_O2G_Equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Equip& default_instance();

  void Swap(MSG_O2G_Equip* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Equip& from);
  void MergeFrom(const MSG_O2G_Equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 equipsn = 30;
  inline bool has_equipsn() const;
  inline void clear_equipsn();
  static const int kEquipsnFieldNumber = 30;
  inline ::google::protobuf::int32 equipsn() const;
  inline void set_equipsn(::google::protobuf::int32 value);

  // required int32 equipid = 40;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 40;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);

  // required int32 maketype = 50;
  inline bool has_maketype() const;
  inline void clear_maketype();
  static const int kMaketypeFieldNumber = 50;
  inline ::google::protobuf::int32 maketype() const;
  inline void set_maketype(::google::protobuf::int32 value);

  // required .gproto.gather.INFO_Equipment equipbefore = 60;
  inline bool has_equipbefore() const;
  inline void clear_equipbefore();
  static const int kEquipbeforeFieldNumber = 60;
  inline const ::gproto::gather::INFO_Equipment& equipbefore() const;
  inline ::gproto::gather::INFO_Equipment* mutable_equipbefore();
  inline ::gproto::gather::INFO_Equipment* release_equipbefore();
  inline void set_allocated_equipbefore(::gproto::gather::INFO_Equipment* equipbefore);

  // required .gproto.gather.INFO_Equipment equipafter = 70;
  inline bool has_equipafter() const;
  inline void clear_equipafter();
  static const int kEquipafterFieldNumber = 70;
  inline const ::gproto::gather::INFO_Equipment& equipafter() const;
  inline ::gproto::gather::INFO_Equipment* mutable_equipafter();
  inline ::gproto::gather::INFO_Equipment* release_equipafter();
  inline void set_allocated_equipafter(::gproto::gather::INFO_Equipment* equipafter);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Equip)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_equipsn();
  inline void clear_has_equipsn();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_maketype();
  inline void clear_has_maketype();
  inline void set_has_equipbefore();
  inline void clear_has_equipbefore();
  inline void set_has_equipafter();
  inline void clear_has_equipafter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 equipsn_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 maketype_;
  ::gproto::gather::INFO_Equipment* equipbefore_;
  ::gproto::gather::INFO_Equipment* equipafter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Equip* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Relive : public ::google::protobuf::Message {
 public:
  MSG_O2G_Relive();
  virtual ~MSG_O2G_Relive();

  MSG_O2G_Relive(const MSG_O2G_Relive& from);

  inline MSG_O2G_Relive& operator=(const MSG_O2G_Relive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Relive& default_instance();

  void Swap(MSG_O2G_Relive* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Relive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Relive& from);
  void MergeFrom(const MSG_O2G_Relive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolelevel = 30;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 30;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 instancesn = 40;
  inline bool has_instancesn() const;
  inline void clear_instancesn();
  static const int kInstancesnFieldNumber = 40;
  inline ::google::protobuf::int32 instancesn() const;
  inline void set_instancesn(::google::protobuf::int32 value);

  // required int32 wastediamond = 50;
  inline bool has_wastediamond() const;
  inline void clear_wastediamond();
  static const int kWastediamondFieldNumber = 50;
  inline ::google::protobuf::int32 wastediamond() const;
  inline void set_wastediamond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Relive)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_instancesn();
  inline void clear_has_instancesn();
  inline void set_has_wastediamond();
  inline void clear_has_wastediamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 instancesn_;
  ::google::protobuf::int32 wastediamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Relive* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Instance : public ::google::protobuf::Message {
 public:
  MSG_O2G_Instance();
  virtual ~MSG_O2G_Instance();

  MSG_O2G_Instance(const MSG_O2G_Instance& from);

  inline MSG_O2G_Instance& operator=(const MSG_O2G_Instance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Instance& default_instance();

  void Swap(MSG_O2G_Instance* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Instance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Instance& from);
  void MergeFrom(const MSG_O2G_Instance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 instancesn = 10;
  inline bool has_instancesn() const;
  inline void clear_instancesn();
  static const int kInstancesnFieldNumber = 10;
  inline ::google::protobuf::int32 instancesn() const;
  inline void set_instancesn(::google::protobuf::int32 value);

  // required int32 result = 20;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 20;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 passtime = 30;
  inline bool has_passtime() const;
  inline void clear_passtime();
  static const int kPasstimeFieldNumber = 30;
  inline ::google::protobuf::int32 passtime() const;
  inline void set_passtime(::google::protobuf::int32 value);

  // required int32 deadtimes = 40;
  inline bool has_deadtimes() const;
  inline void clear_deadtimes();
  static const int kDeadtimesFieldNumber = 40;
  inline ::google::protobuf::int32 deadtimes() const;
  inline void set_deadtimes(::google::protobuf::int32 value);

  // repeated int32 roleid = 50;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 50;
  inline ::google::protobuf::int32 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::int32 value);
  inline void add_roleid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roleid();

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Instance)
 private:
  inline void set_has_instancesn();
  inline void clear_has_instancesn();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_passtime();
  inline void clear_has_passtime();
  inline void set_has_deadtimes();
  inline void clear_has_deadtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 instancesn_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 passtime_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Instance* default_instance_;
};
// -------------------------------------------------------------------

class MSG_O2G_Arena : public ::google::protobuf::Message {
 public:
  MSG_O2G_Arena();
  virtual ~MSG_O2G_Arena();

  MSG_O2G_Arena(const MSG_O2G_Arena& from);

  inline MSG_O2G_Arena& operator=(const MSG_O2G_Arena& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_O2G_Arena& default_instance();

  void Swap(MSG_O2G_Arena* other);

  // implements Message ----------------------------------------------

  MSG_O2G_Arena* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_O2G_Arena& from);
  void MergeFrom(const MSG_O2G_Arena& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleid = 10;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 10;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required string rolename = 20;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 20;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 rolelevel = 30;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRolelevelFieldNumber = 30;
  inline ::google::protobuf::int32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::int32 value);

  // required int32 result = 40;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 40;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gproto.gather.MSG_O2G_Arena)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_rolelevel();
  inline void clear_has_rolelevel();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 rolelevel_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gmsg_2eproto();
  friend void protobuf_AssignDesc_gmsg_2eproto();
  friend void protobuf_ShutdownFile_gmsg_2eproto();

  void InitAsDefaultInstance();
  static MSG_O2G_Arena* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_C2G_HeartBeat

// -------------------------------------------------------------------

// MSG_G2C_HeartBeat

// -------------------------------------------------------------------

// MSG_O2G_Deposit

// required string platform = 10;
inline bool MSG_O2G_Deposit::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Deposit::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Deposit::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Deposit::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& MSG_O2G_Deposit::platform() const {
  return *platform_;
}
inline void MSG_O2G_Deposit::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_Deposit::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_Deposit::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Deposit::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* MSG_O2G_Deposit::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Deposit::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 20;
inline bool MSG_O2G_Deposit::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Deposit::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Deposit::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Deposit::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_O2G_Deposit::account() const {
  return *account_;
}
inline void MSG_O2G_Deposit::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Deposit::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Deposit::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Deposit::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MSG_O2G_Deposit::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Deposit::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 roleid = 30;
inline bool MSG_O2G_Deposit::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Deposit::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Deposit::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Deposit::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Deposit::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 40;
inline bool MSG_O2G_Deposit::has_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Deposit::set_has_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Deposit::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Deposit::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Deposit::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Deposit::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Deposit::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Deposit::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Deposit::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Deposit::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Deposit::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 50;
inline bool MSG_O2G_Deposit::has_rolesn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Deposit::set_has_rolesn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Deposit::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Deposit::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_Deposit::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required int32 rolelevel = 60;
inline bool MSG_O2G_Deposit::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Deposit::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Deposit::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Deposit::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Deposit::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 viplevel = 70;
inline bool MSG_O2G_Deposit::has_viplevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Deposit::set_has_viplevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Deposit::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Deposit::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::viplevel() const {
  return viplevel_;
}
inline void MSG_O2G_Deposit::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required int32 type = 80;
inline bool MSG_O2G_Deposit::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MSG_O2G_Deposit::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MSG_O2G_Deposit::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MSG_O2G_Deposit::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::type() const {
  return type_;
}
inline void MSG_O2G_Deposit::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 diamond = 90;
inline bool MSG_O2G_Deposit::has_diamond() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MSG_O2G_Deposit::set_has_diamond() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MSG_O2G_Deposit::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MSG_O2G_Deposit::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google::protobuf::int32 MSG_O2G_Deposit::diamond() const {
  return diamond_;
}
inline void MSG_O2G_Deposit::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_AccountReg

// required string platform = 10;
inline bool MSG_O2G_AccountReg::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_AccountReg::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_AccountReg::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_AccountReg::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& MSG_O2G_AccountReg::platform() const {
  return *platform_;
}
inline void MSG_O2G_AccountReg::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_AccountReg::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_AccountReg::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_AccountReg::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* MSG_O2G_AccountReg::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_AccountReg::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 20;
inline bool MSG_O2G_AccountReg::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_AccountReg::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_AccountReg::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_AccountReg::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_O2G_AccountReg::account() const {
  return *account_;
}
inline void MSG_O2G_AccountReg::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_AccountReg::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_AccountReg::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_AccountReg::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MSG_O2G_AccountReg::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_AccountReg::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MSG_O2G_RoleCreate

// required string platform = 10;
inline bool MSG_O2G_RoleCreate::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_RoleCreate::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_RoleCreate::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_RoleCreate::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& MSG_O2G_RoleCreate::platform() const {
  return *platform_;
}
inline void MSG_O2G_RoleCreate::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_RoleCreate::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* MSG_O2G_RoleCreate::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_RoleCreate::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 20;
inline bool MSG_O2G_RoleCreate::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_RoleCreate::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_RoleCreate::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_RoleCreate::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_O2G_RoleCreate::account() const {
  return *account_;
}
inline void MSG_O2G_RoleCreate::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_RoleCreate::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MSG_O2G_RoleCreate::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_RoleCreate::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 30;
inline bool MSG_O2G_RoleCreate::has_rolesn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_RoleCreate::set_has_rolesn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_RoleCreate::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_RoleCreate::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_RoleCreate::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_RoleCreate::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required string rolename = 40;
inline bool MSG_O2G_RoleCreate::has_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_RoleCreate::set_has_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_RoleCreate::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_RoleCreate::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_RoleCreate::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_RoleCreate::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_RoleCreate::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_RoleCreate::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_RoleCreate::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_RoleCreate::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MSG_O2G_Login

// required string platform = 10;
inline bool MSG_O2G_Login::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Login::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Login::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Login::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& MSG_O2G_Login::platform() const {
  return *platform_;
}
inline void MSG_O2G_Login::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_Login::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void MSG_O2G_Login::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Login::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* MSG_O2G_Login::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Login::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 20;
inline bool MSG_O2G_Login::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Login::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Login::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_O2G_Login::account() const {
  return *account_;
}
inline void MSG_O2G_Login::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Login::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Login::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Login::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MSG_O2G_Login::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Login::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 30;
inline bool MSG_O2G_Login::has_rolesn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Login::set_has_rolesn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Login::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Login::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_Login::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_Login::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required int32 rolelevel = 35;
inline bool MSG_O2G_Login::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Login::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Login::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Login::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Login::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Login::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required string rolename = 40;
inline bool MSG_O2G_Login::has_rolename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Login::set_has_rolename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Login::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Login::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Login::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Login::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Login::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Login::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Login::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Login::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Login::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 onlinetime = 50;
inline bool MSG_O2G_Login::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Login::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Login::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Login::clear_onlinetime() {
  onlinetime_ = 0;
  clear_has_onlinetime();
}
inline ::google::protobuf::int32 MSG_O2G_Login::onlinetime() const {
  return onlinetime_;
}
inline void MSG_O2G_Login::set_onlinetime(::google::protobuf::int32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// required int32 offlinetime = 60;
inline bool MSG_O2G_Login::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Login::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Login::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Login::clear_offlinetime() {
  offlinetime_ = 0;
  clear_has_offlinetime();
}
inline ::google::protobuf::int32 MSG_O2G_Login::offlinetime() const {
  return offlinetime_;
}
inline void MSG_O2G_Login::set_offlinetime(::google::protobuf::int32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_BagExtend

// required int32 roleid = 10;
inline bool MSG_O2G_BagExtend::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_BagExtend::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_BagExtend::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_BagExtend::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_BagExtend::roleid() const {
  return roleid_;
}
inline void MSG_O2G_BagExtend::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_BagExtend::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_BagExtend::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_BagExtend::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_BagExtend::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_BagExtend::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_BagExtend::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BagExtend::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BagExtend::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_BagExtend::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_BagExtend::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_BagExtend::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 30;
inline bool MSG_O2G_BagExtend::has_rolesn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_BagExtend::set_has_rolesn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_BagExtend::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_BagExtend::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_BagExtend::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_BagExtend::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required int32 type = 40;
inline bool MSG_O2G_BagExtend::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_BagExtend::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_BagExtend::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_BagExtend::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSG_O2G_BagExtend::type() const {
  return type_;
}
inline void MSG_O2G_BagExtend::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 extendnum = 50;
inline bool MSG_O2G_BagExtend::has_extendnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_BagExtend::set_has_extendnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_BagExtend::clear_has_extendnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_BagExtend::clear_extendnum() {
  extendnum_ = 0;
  clear_has_extendnum();
}
inline ::google::protobuf::int32 MSG_O2G_BagExtend::extendnum() const {
  return extendnum_;
}
inline void MSG_O2G_BagExtend::set_extendnum(::google::protobuf::int32 value) {
  set_has_extendnum();
  extendnum_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_BuyInstance

// required int32 roleid = 10;
inline bool MSG_O2G_BuyInstance::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_BuyInstance::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_BuyInstance::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::roleid() const {
  return roleid_;
}
inline void MSG_O2G_BuyInstance::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_BuyInstance::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_BuyInstance::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_BuyInstance::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_BuyInstance::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_BuyInstance::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BuyInstance::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BuyInstance::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_BuyInstance::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_BuyInstance::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_BuyInstance::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 30;
inline bool MSG_O2G_BuyInstance::has_rolesn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_rolesn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_BuyInstance::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_BuyInstance::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_BuyInstance::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required int32 rolelevel = 40;
inline bool MSG_O2G_BuyInstance::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_BuyInstance::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_BuyInstance::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_BuyInstance::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 viplevel = 50;
inline bool MSG_O2G_BuyInstance::has_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_BuyInstance::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_BuyInstance::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::viplevel() const {
  return viplevel_;
}
inline void MSG_O2G_BuyInstance::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required int32 instancesn = 60;
inline bool MSG_O2G_BuyInstance::has_instancesn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_instancesn() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_BuyInstance::clear_has_instancesn() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_BuyInstance::clear_instancesn() {
  instancesn_ = 0;
  clear_has_instancesn();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::instancesn() const {
  return instancesn_;
}
inline void MSG_O2G_BuyInstance::set_instancesn(::google::protobuf::int32 value) {
  set_has_instancesn();
  instancesn_ = value;
}

// required int32 buycount = 70;
inline bool MSG_O2G_BuyInstance::has_buycount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_BuyInstance::set_has_buycount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_BuyInstance::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_BuyInstance::clear_buycount() {
  buycount_ = 0;
  clear_has_buycount();
}
inline ::google::protobuf::int32 MSG_O2G_BuyInstance::buycount() const {
  return buycount_;
}
inline void MSG_O2G_BuyInstance::set_buycount(::google::protobuf::int32 value) {
  set_has_buycount();
  buycount_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_BuyCoin

// required int32 roleid = 10;
inline bool MSG_O2G_BuyCoin::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_BuyCoin::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_BuyCoin::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::roleid() const {
  return roleid_;
}
inline void MSG_O2G_BuyCoin::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_BuyCoin::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_BuyCoin::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_BuyCoin::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_BuyCoin::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_BuyCoin::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BuyCoin::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_BuyCoin::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_BuyCoin::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_BuyCoin::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_BuyCoin::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolesn = 30;
inline bool MSG_O2G_BuyCoin::has_rolesn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_rolesn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_BuyCoin::clear_has_rolesn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_BuyCoin::clear_rolesn() {
  rolesn_ = 0;
  clear_has_rolesn();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::rolesn() const {
  return rolesn_;
}
inline void MSG_O2G_BuyCoin::set_rolesn(::google::protobuf::int32 value) {
  set_has_rolesn();
  rolesn_ = value;
}

// required int32 rolelevel = 40;
inline bool MSG_O2G_BuyCoin::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_BuyCoin::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_BuyCoin::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_BuyCoin::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 viplevel = 50;
inline bool MSG_O2G_BuyCoin::has_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_BuyCoin::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_BuyCoin::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::viplevel() const {
  return viplevel_;
}
inline void MSG_O2G_BuyCoin::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required int32 spenddiamond = 60;
inline bool MSG_O2G_BuyCoin::has_spenddiamond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_spenddiamond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_BuyCoin::clear_has_spenddiamond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_BuyCoin::clear_spenddiamond() {
  spenddiamond_ = 0;
  clear_has_spenddiamond();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::spenddiamond() const {
  return spenddiamond_;
}
inline void MSG_O2G_BuyCoin::set_spenddiamond(::google::protobuf::int32 value) {
  set_has_spenddiamond();
  spenddiamond_ = value;
}

// required int32 coin = 70;
inline bool MSG_O2G_BuyCoin::has_coin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_BuyCoin::set_has_coin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_BuyCoin::clear_has_coin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_BuyCoin::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 MSG_O2G_BuyCoin::coin() const {
  return coin_;
}
inline void MSG_O2G_BuyCoin::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_Diamond

// required string account = 10;
inline bool MSG_O2G_Diamond::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Diamond::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Diamond::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Diamond::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_O2G_Diamond::account() const {
  return *account_;
}
inline void MSG_O2G_Diamond::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Diamond::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void MSG_O2G_Diamond::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Diamond::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* MSG_O2G_Diamond::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Diamond::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 roleid = 20;
inline bool MSG_O2G_Diamond::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Diamond::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Diamond::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Diamond::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Diamond::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 30;
inline bool MSG_O2G_Diamond::has_rolename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Diamond::set_has_rolename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Diamond::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Diamond::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Diamond::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Diamond::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Diamond::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Diamond::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Diamond::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Diamond::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Diamond::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolelevel = 40;
inline bool MSG_O2G_Diamond::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Diamond::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Diamond::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Diamond::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Diamond::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 type = 50;
inline bool MSG_O2G_Diamond::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Diamond::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Diamond::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Diamond::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::type() const {
  return type_;
}
inline void MSG_O2G_Diamond::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 subtype = 60;
inline bool MSG_O2G_Diamond::has_subtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Diamond::set_has_subtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Diamond::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Diamond::clear_subtype() {
  subtype_ = 0;
  clear_has_subtype();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::subtype() const {
  return subtype_;
}
inline void MSG_O2G_Diamond::set_subtype(::google::protobuf::int32 value) {
  set_has_subtype();
  subtype_ = value;
}

// required int32 changediamond = 70;
inline bool MSG_O2G_Diamond::has_changediamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Diamond::set_has_changediamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Diamond::clear_has_changediamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Diamond::clear_changediamond() {
  changediamond_ = 0;
  clear_has_changediamond();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::changediamond() const {
  return changediamond_;
}
inline void MSG_O2G_Diamond::set_changediamond(::google::protobuf::int32 value) {
  set_has_changediamond();
  changediamond_ = value;
}

// required int32 totaldiamond = 80;
inline bool MSG_O2G_Diamond::has_totaldiamond() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MSG_O2G_Diamond::set_has_totaldiamond() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MSG_O2G_Diamond::clear_has_totaldiamond() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MSG_O2G_Diamond::clear_totaldiamond() {
  totaldiamond_ = 0;
  clear_has_totaldiamond();
}
inline ::google::protobuf::int32 MSG_O2G_Diamond::totaldiamond() const {
  return totaldiamond_;
}
inline void MSG_O2G_Diamond::set_totaldiamond(::google::protobuf::int32 value) {
  set_has_totaldiamond();
  totaldiamond_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_Coin

// required int32 roleid = 10;
inline bool MSG_O2G_Coin::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Coin::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Coin::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Coin::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Coin::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_Coin::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Coin::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Coin::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Coin::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Coin::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Coin::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Coin::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Coin::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Coin::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Coin::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Coin::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolelevel = 30;
inline bool MSG_O2G_Coin::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Coin::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Coin::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Coin::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Coin::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 type = 40;
inline bool MSG_O2G_Coin::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Coin::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Coin::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Coin::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::type() const {
  return type_;
}
inline void MSG_O2G_Coin::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 subtype = 50;
inline bool MSG_O2G_Coin::has_subtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Coin::set_has_subtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Coin::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Coin::clear_subtype() {
  subtype_ = 0;
  clear_has_subtype();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::subtype() const {
  return subtype_;
}
inline void MSG_O2G_Coin::set_subtype(::google::protobuf::int32 value) {
  set_has_subtype();
  subtype_ = value;
}

// required int32 changecoin = 60;
inline bool MSG_O2G_Coin::has_changecoin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Coin::set_has_changecoin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Coin::clear_has_changecoin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Coin::clear_changecoin() {
  changecoin_ = 0;
  clear_has_changecoin();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::changecoin() const {
  return changecoin_;
}
inline void MSG_O2G_Coin::set_changecoin(::google::protobuf::int32 value) {
  set_has_changecoin();
  changecoin_ = value;
}

// required int32 totalcoin = 70;
inline bool MSG_O2G_Coin::has_totalcoin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Coin::set_has_totalcoin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Coin::clear_has_totalcoin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Coin::clear_totalcoin() {
  totalcoin_ = 0;
  clear_has_totalcoin();
}
inline ::google::protobuf::int32 MSG_O2G_Coin::totalcoin() const {
  return totalcoin_;
}
inline void MSG_O2G_Coin::set_totalcoin(::google::protobuf::int32 value) {
  set_has_totalcoin();
  totalcoin_ = value;
}

// -------------------------------------------------------------------

// INFO_ItemMes

// required int32 id = 1;
inline bool INFO_ItemMes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void INFO_ItemMes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void INFO_ItemMes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void INFO_ItemMes::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 INFO_ItemMes::id() const {
  return id_;
}
inline void INFO_ItemMes::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 num = 2;
inline bool INFO_ItemMes::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void INFO_ItemMes::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void INFO_ItemMes::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void INFO_ItemMes::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 INFO_ItemMes::num() const {
  return num_;
}
inline void INFO_ItemMes::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 itemsn = 3;
inline bool INFO_ItemMes::has_itemsn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void INFO_ItemMes::set_has_itemsn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void INFO_ItemMes::clear_has_itemsn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void INFO_ItemMes::clear_itemsn() {
  itemsn_ = 0;
  clear_has_itemsn();
}
inline ::google::protobuf::int32 INFO_ItemMes::itemsn() const {
  return itemsn_;
}
inline void INFO_ItemMes::set_itemsn(::google::protobuf::int32 value) {
  set_has_itemsn();
  itemsn_ = value;
}

// -------------------------------------------------------------------

// INFO_Property

// required int32 propertytype = 1;
inline bool INFO_Property::has_propertytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void INFO_Property::set_has_propertytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void INFO_Property::clear_has_propertytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void INFO_Property::clear_propertytype() {
  propertytype_ = 0;
  clear_has_propertytype();
}
inline ::google::protobuf::int32 INFO_Property::propertytype() const {
  return propertytype_;
}
inline void INFO_Property::set_propertytype(::google::protobuf::int32 value) {
  set_has_propertytype();
  propertytype_ = value;
}

// required int32 propertyval = 2;
inline bool INFO_Property::has_propertyval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void INFO_Property::set_has_propertyval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void INFO_Property::clear_has_propertyval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void INFO_Property::clear_propertyval() {
  propertyval_ = 0;
  clear_has_propertyval();
}
inline ::google::protobuf::int32 INFO_Property::propertyval() const {
  return propertyval_;
}
inline void INFO_Property::set_propertyval(::google::protobuf::int32 value) {
  set_has_propertyval();
  propertyval_ = value;
}

// -------------------------------------------------------------------

// INFO_HoleGem

// required int32 holeid = 1;
inline bool INFO_HoleGem::has_holeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void INFO_HoleGem::set_has_holeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void INFO_HoleGem::clear_has_holeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void INFO_HoleGem::clear_holeid() {
  holeid_ = 0;
  clear_has_holeid();
}
inline ::google::protobuf::int32 INFO_HoleGem::holeid() const {
  return holeid_;
}
inline void INFO_HoleGem::set_holeid(::google::protobuf::int32 value) {
  set_has_holeid();
  holeid_ = value;
}

// required int32 gemsn = 2;
inline bool INFO_HoleGem::has_gemsn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void INFO_HoleGem::set_has_gemsn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void INFO_HoleGem::clear_has_gemsn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void INFO_HoleGem::clear_gemsn() {
  gemsn_ = 0;
  clear_has_gemsn();
}
inline ::google::protobuf::int32 INFO_HoleGem::gemsn() const {
  return gemsn_;
}
inline void INFO_HoleGem::set_gemsn(::google::protobuf::int32 value) {
  set_has_gemsn();
  gemsn_ = value;
}

// -------------------------------------------------------------------

// INFO_Equipment

// required .gproto.gather.INFO_ItemMes basemes = 1;
inline bool INFO_Equipment::has_basemes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void INFO_Equipment::set_has_basemes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void INFO_Equipment::clear_has_basemes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void INFO_Equipment::clear_basemes() {
  if (basemes_ != NULL) basemes_->::gproto::gather::INFO_ItemMes::Clear();
  clear_has_basemes();
}
inline const ::gproto::gather::INFO_ItemMes& INFO_Equipment::basemes() const {
  return basemes_ != NULL ? *basemes_ : *default_instance_->basemes_;
}
inline ::gproto::gather::INFO_ItemMes* INFO_Equipment::mutable_basemes() {
  set_has_basemes();
  if (basemes_ == NULL) basemes_ = new ::gproto::gather::INFO_ItemMes;
  return basemes_;
}
inline ::gproto::gather::INFO_ItemMes* INFO_Equipment::release_basemes() {
  clear_has_basemes();
  ::gproto::gather::INFO_ItemMes* temp = basemes_;
  basemes_ = NULL;
  return temp;
}
inline void INFO_Equipment::set_allocated_basemes(::gproto::gather::INFO_ItemMes* basemes) {
  delete basemes_;
  basemes_ = basemes;
  if (basemes) {
    set_has_basemes();
  } else {
    clear_has_basemes();
  }
}

// required int32 strelevel = 2;
inline bool INFO_Equipment::has_strelevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void INFO_Equipment::set_has_strelevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void INFO_Equipment::clear_has_strelevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void INFO_Equipment::clear_strelevel() {
  strelevel_ = 0;
  clear_has_strelevel();
}
inline ::google::protobuf::int32 INFO_Equipment::strelevel() const {
  return strelevel_;
}
inline void INFO_Equipment::set_strelevel(::google::protobuf::int32 value) {
  set_has_strelevel();
  strelevel_ = value;
}

// repeated int32 basepropty = 3;
inline int INFO_Equipment::basepropty_size() const {
  return basepropty_.size();
}
inline void INFO_Equipment::clear_basepropty() {
  basepropty_.Clear();
}
inline ::google::protobuf::int32 INFO_Equipment::basepropty(int index) const {
  return basepropty_.Get(index);
}
inline void INFO_Equipment::set_basepropty(int index, ::google::protobuf::int32 value) {
  basepropty_.Set(index, value);
}
inline void INFO_Equipment::add_basepropty(::google::protobuf::int32 value) {
  basepropty_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
INFO_Equipment::basepropty() const {
  return basepropty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
INFO_Equipment::mutable_basepropty() {
  return &basepropty_;
}

// repeated .gproto.gather.INFO_Property addtional = 4;
inline int INFO_Equipment::addtional_size() const {
  return addtional_.size();
}
inline void INFO_Equipment::clear_addtional() {
  addtional_.Clear();
}
inline const ::gproto::gather::INFO_Property& INFO_Equipment::addtional(int index) const {
  return addtional_.Get(index);
}
inline ::gproto::gather::INFO_Property* INFO_Equipment::mutable_addtional(int index) {
  return addtional_.Mutable(index);
}
inline ::gproto::gather::INFO_Property* INFO_Equipment::add_addtional() {
  return addtional_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_Property >&
INFO_Equipment::addtional() const {
  return addtional_;
}
inline ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_Property >*
INFO_Equipment::mutable_addtional() {
  return &addtional_;
}

// repeated .gproto.gather.INFO_HoleGem holegem = 5;
inline int INFO_Equipment::holegem_size() const {
  return holegem_.size();
}
inline void INFO_Equipment::clear_holegem() {
  holegem_.Clear();
}
inline const ::gproto::gather::INFO_HoleGem& INFO_Equipment::holegem(int index) const {
  return holegem_.Get(index);
}
inline ::gproto::gather::INFO_HoleGem* INFO_Equipment::mutable_holegem(int index) {
  return holegem_.Mutable(index);
}
inline ::gproto::gather::INFO_HoleGem* INFO_Equipment::add_holegem() {
  return holegem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_HoleGem >&
INFO_Equipment::holegem() const {
  return holegem_;
}
inline ::google::protobuf::RepeatedPtrField< ::gproto::gather::INFO_HoleGem >*
INFO_Equipment::mutable_holegem() {
  return &holegem_;
}

// required int32 curholenum = 6;
inline bool INFO_Equipment::has_curholenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void INFO_Equipment::set_has_curholenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void INFO_Equipment::clear_has_curholenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void INFO_Equipment::clear_curholenum() {
  curholenum_ = 0;
  clear_has_curholenum();
}
inline ::google::protobuf::int32 INFO_Equipment::curholenum() const {
  return curholenum_;
}
inline void INFO_Equipment::set_curholenum(::google::protobuf::int32 value) {
  set_has_curholenum();
  curholenum_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_Item

// required int32 itemsn = 10;
inline bool MSG_O2G_Item::has_itemsn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Item::set_has_itemsn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Item::clear_has_itemsn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Item::clear_itemsn() {
  itemsn_ = 0;
  clear_has_itemsn();
}
inline ::google::protobuf::int32 MSG_O2G_Item::itemsn() const {
  return itemsn_;
}
inline void MSG_O2G_Item::set_itemsn(::google::protobuf::int32 value) {
  set_has_itemsn();
  itemsn_ = value;
}

// required int32 itemtype = 20;
inline bool MSG_O2G_Item::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Item::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Item::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Item::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 MSG_O2G_Item::itemtype() const {
  return itemtype_;
}
inline void MSG_O2G_Item::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// required int32 num = 30;
inline bool MSG_O2G_Item::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Item::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Item::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Item::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 MSG_O2G_Item::num() const {
  return num_;
}
inline void MSG_O2G_Item::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 type = 40;
inline bool MSG_O2G_Item::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Item::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Item::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Item::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MSG_O2G_Item::type() const {
  return type_;
}
inline void MSG_O2G_Item::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 way = 50;
inline bool MSG_O2G_Item::has_way() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Item::set_has_way() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Item::clear_has_way() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Item::clear_way() {
  way_ = 0;
  clear_has_way();
}
inline ::google::protobuf::int32 MSG_O2G_Item::way() const {
  return way_;
}
inline void MSG_O2G_Item::set_way(::google::protobuf::int32 value) {
  set_has_way();
  way_ = value;
}

// required int32 roleid = 60;
inline bool MSG_O2G_Item::has_roleid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Item::set_has_roleid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Item::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Item::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Item::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Item::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 70;
inline bool MSG_O2G_Item::has_rolename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Item::set_has_rolename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Item::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Item::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Item::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Item::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Item::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Item::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Item::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Item::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Item::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolelevel = 80;
inline bool MSG_O2G_Item::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MSG_O2G_Item::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MSG_O2G_Item::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MSG_O2G_Item::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Item::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Item::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// optional .gproto.gather.INFO_Equipment equip = 90;
inline bool MSG_O2G_Item::has_equip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MSG_O2G_Item::set_has_equip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MSG_O2G_Item::clear_has_equip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MSG_O2G_Item::clear_equip() {
  if (equip_ != NULL) equip_->::gproto::gather::INFO_Equipment::Clear();
  clear_has_equip();
}
inline const ::gproto::gather::INFO_Equipment& MSG_O2G_Item::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Item::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::gproto::gather::INFO_Equipment;
  return equip_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Item::release_equip() {
  clear_has_equip();
  ::gproto::gather::INFO_Equipment* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline void MSG_O2G_Item::set_allocated_equip(::gproto::gather::INFO_Equipment* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    set_has_equip();
  } else {
    clear_has_equip();
  }
}

// -------------------------------------------------------------------

// MSG_O2G_Equip

// required int32 roleid = 10;
inline bool MSG_O2G_Equip::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Equip::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Equip::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Equip::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Equip::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Equip::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_Equip::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Equip::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Equip::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Equip::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Equip::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Equip::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Equip::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Equip::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Equip::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Equip::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Equip::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 equipsn = 30;
inline bool MSG_O2G_Equip::has_equipsn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Equip::set_has_equipsn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Equip::clear_has_equipsn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Equip::clear_equipsn() {
  equipsn_ = 0;
  clear_has_equipsn();
}
inline ::google::protobuf::int32 MSG_O2G_Equip::equipsn() const {
  return equipsn_;
}
inline void MSG_O2G_Equip::set_equipsn(::google::protobuf::int32 value) {
  set_has_equipsn();
  equipsn_ = value;
}

// required int32 equipid = 40;
inline bool MSG_O2G_Equip::has_equipid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Equip::set_has_equipid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Equip::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Equip::clear_equipid() {
  equipid_ = 0;
  clear_has_equipid();
}
inline ::google::protobuf::int32 MSG_O2G_Equip::equipid() const {
  return equipid_;
}
inline void MSG_O2G_Equip::set_equipid(::google::protobuf::int32 value) {
  set_has_equipid();
  equipid_ = value;
}

// required int32 maketype = 50;
inline bool MSG_O2G_Equip::has_maketype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Equip::set_has_maketype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Equip::clear_has_maketype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Equip::clear_maketype() {
  maketype_ = 0;
  clear_has_maketype();
}
inline ::google::protobuf::int32 MSG_O2G_Equip::maketype() const {
  return maketype_;
}
inline void MSG_O2G_Equip::set_maketype(::google::protobuf::int32 value) {
  set_has_maketype();
  maketype_ = value;
}

// required .gproto.gather.INFO_Equipment equipbefore = 60;
inline bool MSG_O2G_Equip::has_equipbefore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MSG_O2G_Equip::set_has_equipbefore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MSG_O2G_Equip::clear_has_equipbefore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MSG_O2G_Equip::clear_equipbefore() {
  if (equipbefore_ != NULL) equipbefore_->::gproto::gather::INFO_Equipment::Clear();
  clear_has_equipbefore();
}
inline const ::gproto::gather::INFO_Equipment& MSG_O2G_Equip::equipbefore() const {
  return equipbefore_ != NULL ? *equipbefore_ : *default_instance_->equipbefore_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Equip::mutable_equipbefore() {
  set_has_equipbefore();
  if (equipbefore_ == NULL) equipbefore_ = new ::gproto::gather::INFO_Equipment;
  return equipbefore_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Equip::release_equipbefore() {
  clear_has_equipbefore();
  ::gproto::gather::INFO_Equipment* temp = equipbefore_;
  equipbefore_ = NULL;
  return temp;
}
inline void MSG_O2G_Equip::set_allocated_equipbefore(::gproto::gather::INFO_Equipment* equipbefore) {
  delete equipbefore_;
  equipbefore_ = equipbefore;
  if (equipbefore) {
    set_has_equipbefore();
  } else {
    clear_has_equipbefore();
  }
}

// required .gproto.gather.INFO_Equipment equipafter = 70;
inline bool MSG_O2G_Equip::has_equipafter() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MSG_O2G_Equip::set_has_equipafter() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MSG_O2G_Equip::clear_has_equipafter() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MSG_O2G_Equip::clear_equipafter() {
  if (equipafter_ != NULL) equipafter_->::gproto::gather::INFO_Equipment::Clear();
  clear_has_equipafter();
}
inline const ::gproto::gather::INFO_Equipment& MSG_O2G_Equip::equipafter() const {
  return equipafter_ != NULL ? *equipafter_ : *default_instance_->equipafter_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Equip::mutable_equipafter() {
  set_has_equipafter();
  if (equipafter_ == NULL) equipafter_ = new ::gproto::gather::INFO_Equipment;
  return equipafter_;
}
inline ::gproto::gather::INFO_Equipment* MSG_O2G_Equip::release_equipafter() {
  clear_has_equipafter();
  ::gproto::gather::INFO_Equipment* temp = equipafter_;
  equipafter_ = NULL;
  return temp;
}
inline void MSG_O2G_Equip::set_allocated_equipafter(::gproto::gather::INFO_Equipment* equipafter) {
  delete equipafter_;
  equipafter_ = equipafter;
  if (equipafter) {
    set_has_equipafter();
  } else {
    clear_has_equipafter();
  }
}

// -------------------------------------------------------------------

// MSG_O2G_Relive

// required int32 roleid = 10;
inline bool MSG_O2G_Relive::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Relive::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Relive::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Relive::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Relive::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Relive::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_Relive::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Relive::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Relive::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Relive::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Relive::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Relive::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Relive::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Relive::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Relive::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Relive::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Relive::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolelevel = 30;
inline bool MSG_O2G_Relive::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Relive::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Relive::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Relive::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Relive::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Relive::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 instancesn = 40;
inline bool MSG_O2G_Relive::has_instancesn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Relive::set_has_instancesn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Relive::clear_has_instancesn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Relive::clear_instancesn() {
  instancesn_ = 0;
  clear_has_instancesn();
}
inline ::google::protobuf::int32 MSG_O2G_Relive::instancesn() const {
  return instancesn_;
}
inline void MSG_O2G_Relive::set_instancesn(::google::protobuf::int32 value) {
  set_has_instancesn();
  instancesn_ = value;
}

// required int32 wastediamond = 50;
inline bool MSG_O2G_Relive::has_wastediamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_O2G_Relive::set_has_wastediamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_O2G_Relive::clear_has_wastediamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_O2G_Relive::clear_wastediamond() {
  wastediamond_ = 0;
  clear_has_wastediamond();
}
inline ::google::protobuf::int32 MSG_O2G_Relive::wastediamond() const {
  return wastediamond_;
}
inline void MSG_O2G_Relive::set_wastediamond(::google::protobuf::int32 value) {
  set_has_wastediamond();
  wastediamond_ = value;
}

// -------------------------------------------------------------------

// MSG_O2G_Instance

// required int32 instancesn = 10;
inline bool MSG_O2G_Instance::has_instancesn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Instance::set_has_instancesn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Instance::clear_has_instancesn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Instance::clear_instancesn() {
  instancesn_ = 0;
  clear_has_instancesn();
}
inline ::google::protobuf::int32 MSG_O2G_Instance::instancesn() const {
  return instancesn_;
}
inline void MSG_O2G_Instance::set_instancesn(::google::protobuf::int32 value) {
  set_has_instancesn();
  instancesn_ = value;
}

// required int32 result = 20;
inline bool MSG_O2G_Instance::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Instance::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Instance::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Instance::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_O2G_Instance::result() const {
  return result_;
}
inline void MSG_O2G_Instance::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 passtime = 30;
inline bool MSG_O2G_Instance::has_passtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Instance::set_has_passtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Instance::clear_has_passtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Instance::clear_passtime() {
  passtime_ = 0;
  clear_has_passtime();
}
inline ::google::protobuf::int32 MSG_O2G_Instance::passtime() const {
  return passtime_;
}
inline void MSG_O2G_Instance::set_passtime(::google::protobuf::int32 value) {
  set_has_passtime();
  passtime_ = value;
}

// required int32 deadtimes = 40;
inline bool MSG_O2G_Instance::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Instance::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Instance::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Instance::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 MSG_O2G_Instance::deadtimes() const {
  return deadtimes_;
}
inline void MSG_O2G_Instance::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
}

// repeated int32 roleid = 50;
inline int MSG_O2G_Instance::roleid_size() const {
  return roleid_.size();
}
inline void MSG_O2G_Instance::clear_roleid() {
  roleid_.Clear();
}
inline ::google::protobuf::int32 MSG_O2G_Instance::roleid(int index) const {
  return roleid_.Get(index);
}
inline void MSG_O2G_Instance::set_roleid(int index, ::google::protobuf::int32 value) {
  roleid_.Set(index, value);
}
inline void MSG_O2G_Instance::add_roleid(::google::protobuf::int32 value) {
  roleid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MSG_O2G_Instance::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MSG_O2G_Instance::mutable_roleid() {
  return &roleid_;
}

// -------------------------------------------------------------------

// MSG_O2G_Arena

// required int32 roleid = 10;
inline bool MSG_O2G_Arena::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_O2G_Arena::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_O2G_Arena::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_O2G_Arena::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MSG_O2G_Arena::roleid() const {
  return roleid_;
}
inline void MSG_O2G_Arena::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string rolename = 20;
inline bool MSG_O2G_Arena::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_O2G_Arena::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_O2G_Arena::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_O2G_Arena::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& MSG_O2G_Arena::rolename() const {
  return *rolename_;
}
inline void MSG_O2G_Arena::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Arena::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MSG_O2G_Arena::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MSG_O2G_Arena::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* MSG_O2G_Arena::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MSG_O2G_Arena::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rolelevel = 30;
inline bool MSG_O2G_Arena::has_rolelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_O2G_Arena::set_has_rolelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_O2G_Arena::clear_has_rolelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_O2G_Arena::clear_rolelevel() {
  rolelevel_ = 0;
  clear_has_rolelevel();
}
inline ::google::protobuf::int32 MSG_O2G_Arena::rolelevel() const {
  return rolelevel_;
}
inline void MSG_O2G_Arena::set_rolelevel(::google::protobuf::int32 value) {
  set_has_rolelevel();
  rolelevel_ = value;
}

// required int32 result = 40;
inline bool MSG_O2G_Arena::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_O2G_Arena::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_O2G_Arena::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_O2G_Arena::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_O2G_Arena::result() const {
  return result_;
}
inline void MSG_O2G_Arena::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gather
}  // namespace gproto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gmsg_2eproto__INCLUDED
