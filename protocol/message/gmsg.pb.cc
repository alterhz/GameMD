// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gproto {

namespace {

const ::google::protobuf::Descriptor* MSG_C2G_HeartBeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_C2G_HeartBeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_G2C_HeartBeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_G2C_HeartBeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_C2G_StartGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_C2G_StartGame_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gmsg_2eproto() {
  protobuf_AddDesc_gmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gmsg.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_C2G_HeartBeat_descriptor_ = file->message_type(0);
  static const int MSG_C2G_HeartBeat_offsets_[1] = {
  };
  MSG_C2G_HeartBeat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_C2G_HeartBeat_descriptor_,
      MSG_C2G_HeartBeat::default_instance_,
      MSG_C2G_HeartBeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_C2G_HeartBeat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_C2G_HeartBeat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_C2G_HeartBeat));
  MSG_G2C_HeartBeat_descriptor_ = file->message_type(1);
  static const int MSG_G2C_HeartBeat_offsets_[1] = {
  };
  MSG_G2C_HeartBeat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_G2C_HeartBeat_descriptor_,
      MSG_G2C_HeartBeat::default_instance_,
      MSG_G2C_HeartBeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_G2C_HeartBeat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_G2C_HeartBeat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_G2C_HeartBeat));
  MSG_C2G_StartGame_descriptor_ = file->message_type(2);
  static const int MSG_C2G_StartGame_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_C2G_StartGame, rolename_),
  };
  MSG_C2G_StartGame_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_C2G_StartGame_descriptor_,
      MSG_C2G_StartGame::default_instance_,
      MSG_C2G_StartGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_C2G_StartGame, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_C2G_StartGame, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_C2G_StartGame));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_C2G_HeartBeat_descriptor_, &MSG_C2G_HeartBeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_G2C_HeartBeat_descriptor_, &MSG_G2C_HeartBeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_C2G_StartGame_descriptor_, &MSG_C2G_StartGame::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gmsg_2eproto() {
  delete MSG_C2G_HeartBeat::default_instance_;
  delete MSG_C2G_HeartBeat_reflection_;
  delete MSG_G2C_HeartBeat::default_instance_;
  delete MSG_G2C_HeartBeat_reflection_;
  delete MSG_C2G_StartGame::default_instance_;
  delete MSG_C2G_StartGame_reflection_;
}

void protobuf_AddDesc_gmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngmsg.proto\022\006gproto\"\023\n\021MSG_C2G_HeartBea"
    "t\"\023\n\021MSG_G2C_HeartBeat\"%\n\021MSG_C2G_StartG"
    "ame\022\020\n\010rolename\030\001 \002(\014", 101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gmsg.proto", &protobuf_RegisterTypes);
  MSG_C2G_HeartBeat::default_instance_ = new MSG_C2G_HeartBeat();
  MSG_G2C_HeartBeat::default_instance_ = new MSG_G2C_HeartBeat();
  MSG_C2G_StartGame::default_instance_ = new MSG_C2G_StartGame();
  MSG_C2G_HeartBeat::default_instance_->InitAsDefaultInstance();
  MSG_G2C_HeartBeat::default_instance_->InitAsDefaultInstance();
  MSG_C2G_StartGame::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gmsg_2eproto {
  StaticDescriptorInitializer_gmsg_2eproto() {
    protobuf_AddDesc_gmsg_2eproto();
  }
} static_descriptor_initializer_gmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MSG_C2G_HeartBeat::MSG_C2G_HeartBeat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_C2G_HeartBeat::InitAsDefaultInstance() {
}

MSG_C2G_HeartBeat::MSG_C2G_HeartBeat(const MSG_C2G_HeartBeat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_C2G_HeartBeat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_C2G_HeartBeat::~MSG_C2G_HeartBeat() {
  SharedDtor();
}

void MSG_C2G_HeartBeat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_C2G_HeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_C2G_HeartBeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_C2G_HeartBeat_descriptor_;
}

const MSG_C2G_HeartBeat& MSG_C2G_HeartBeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gmsg_2eproto();
  return *default_instance_;
}

MSG_C2G_HeartBeat* MSG_C2G_HeartBeat::default_instance_ = NULL;

MSG_C2G_HeartBeat* MSG_C2G_HeartBeat::New() const {
  return new MSG_C2G_HeartBeat;
}

void MSG_C2G_HeartBeat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_C2G_HeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MSG_C2G_HeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_C2G_HeartBeat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_C2G_HeartBeat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_C2G_HeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_C2G_HeartBeat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_C2G_HeartBeat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_C2G_HeartBeat::MergeFrom(const MSG_C2G_HeartBeat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_C2G_HeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_C2G_HeartBeat::CopyFrom(const MSG_C2G_HeartBeat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_C2G_HeartBeat::IsInitialized() const {

  return true;
}

void MSG_C2G_HeartBeat::Swap(MSG_C2G_HeartBeat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_C2G_HeartBeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_C2G_HeartBeat_descriptor_;
  metadata.reflection = MSG_C2G_HeartBeat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MSG_G2C_HeartBeat::MSG_G2C_HeartBeat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_G2C_HeartBeat::InitAsDefaultInstance() {
}

MSG_G2C_HeartBeat::MSG_G2C_HeartBeat(const MSG_G2C_HeartBeat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_G2C_HeartBeat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_G2C_HeartBeat::~MSG_G2C_HeartBeat() {
  SharedDtor();
}

void MSG_G2C_HeartBeat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_G2C_HeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_G2C_HeartBeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_G2C_HeartBeat_descriptor_;
}

const MSG_G2C_HeartBeat& MSG_G2C_HeartBeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gmsg_2eproto();
  return *default_instance_;
}

MSG_G2C_HeartBeat* MSG_G2C_HeartBeat::default_instance_ = NULL;

MSG_G2C_HeartBeat* MSG_G2C_HeartBeat::New() const {
  return new MSG_G2C_HeartBeat;
}

void MSG_G2C_HeartBeat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_G2C_HeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MSG_G2C_HeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_G2C_HeartBeat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_G2C_HeartBeat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_G2C_HeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_G2C_HeartBeat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_G2C_HeartBeat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_G2C_HeartBeat::MergeFrom(const MSG_G2C_HeartBeat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_G2C_HeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_G2C_HeartBeat::CopyFrom(const MSG_G2C_HeartBeat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_G2C_HeartBeat::IsInitialized() const {

  return true;
}

void MSG_G2C_HeartBeat::Swap(MSG_G2C_HeartBeat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_G2C_HeartBeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_G2C_HeartBeat_descriptor_;
  metadata.reflection = MSG_G2C_HeartBeat_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_C2G_StartGame::kRolenameFieldNumber;
#endif  // !_MSC_VER

MSG_C2G_StartGame::MSG_C2G_StartGame()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_C2G_StartGame::InitAsDefaultInstance() {
}

MSG_C2G_StartGame::MSG_C2G_StartGame(const MSG_C2G_StartGame& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_C2G_StartGame::SharedCtor() {
  _cached_size_ = 0;
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_C2G_StartGame::~MSG_C2G_StartGame() {
  SharedDtor();
}

void MSG_C2G_StartGame::SharedDtor() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void MSG_C2G_StartGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_C2G_StartGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_C2G_StartGame_descriptor_;
}

const MSG_C2G_StartGame& MSG_C2G_StartGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gmsg_2eproto();
  return *default_instance_;
}

MSG_C2G_StartGame* MSG_C2G_StartGame::default_instance_ = NULL;

MSG_C2G_StartGame* MSG_C2G_StartGame::New() const {
  return new MSG_C2G_StartGame;
}

void MSG_C2G_StartGame::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_C2G_StartGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes rolename = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rolename()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MSG_C2G_StartGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes rolename = 1;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->rolename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_C2G_StartGame::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes rolename = 1;
  if (has_rolename()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rolename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_C2G_StartGame::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes rolename = 1;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rolename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_C2G_StartGame::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_C2G_StartGame* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_C2G_StartGame*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_C2G_StartGame::MergeFrom(const MSG_C2G_StartGame& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_C2G_StartGame::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_C2G_StartGame::CopyFrom(const MSG_C2G_StartGame& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_C2G_StartGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MSG_C2G_StartGame::Swap(MSG_C2G_StartGame* other) {
  if (other != this) {
    std::swap(rolename_, other->rolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_C2G_StartGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_C2G_StartGame_descriptor_;
  metadata.reflection = MSG_C2G_StartGame_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gproto

// @@protoc_insertion_point(global_scope)
